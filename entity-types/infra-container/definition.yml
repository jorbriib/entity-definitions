domain: INFRA
type: CONTAINER

synthesis:
  rules:
  # Dockerstats receiver from otel collector.
  - identifier: container.id
    name: container.name
    encodeIdentifierInGUID: true
    conditions:
      - attribute: eventType
        value: Metric
      # All metrics from the receiver starts with the 'container.' prefix.
      - attribute: metricName
        prefix: container.
      - attribute: instrumentation.provider
        value: opentelemetry
      # This filters only metrics comming from docker receiver, given that metrics
      # could deffer between different runtime receivers. 
      - attribute: otel.library.name
        value: otelcol/dockerstatsreceiver
    tags:
      # Default resource attributes
      container.runtime:
      container.image.name:      
      container.hostname:
      # Optional resource attribute
      container.image.id:
      # Environment resource attributes
      host.type:
      cloud.provider:
      cloud.account.id:
      cloud.region:
      # The library name contains the name of the receiver that is used to identify the source
      # and select the dashboard.
      otel.library.name:
        entityTagName: instrumentation.name
      newrelic.integrationName:
      newrelic.integrationVersion:
      newrelic.agentVersion:
      host.instanceType:
      # For OpenTelemetry
      telemetry.sdk.name:
        entityTagName: instrumentation.provider
      telemetry.sdk.language:
        entityTagName: language
      # AWS tags
      aws.region:
  # K8s Container from Samples
  - identifier: entityId
    name: containerName
    legacyFeatures:
      overrideGuidType: true
    encodeIdentifierInGUID: true
    conditions:
      - attribute: eventType
        value: K8sContainerSample
    tags:
      clusterName:
        entityTagName: k8s.clusterName
      namespaceName:
        entityTagName: k8s.namespaceName
      status:
        entityTagNames: [k8s.status, container.state]
      podName:
        entityTagName: k8s.podName
      containerImage:
        entityTagName: k8s.containerImage
      nodeName:
        entityTagName: k8s.nodeName
      containerName:
        entityTagName: k8s.containerName
      containerID:
        entityTagName: k8s.containerId
      integrationName:
        entityTagName: newrelic.integrationName
      integrationVersion:
        entityTagName: newrelic.integrationVersion
  # Docker Container from Samples
  - identifier: entityId
    name: name
    legacyFeatures:
      overrideGuidType: true
    encodeIdentifierInGUID: true
    conditions:
      - attribute: eventType
        value: ContainerSample
      - attribute: containerId
        present: true
    tags:
      status:
        entityTagName: container.state
      containerId:
        entityTagName: docker.containerId
      shortContainerId:
        entityTagName: docker.shortContainerId
      imageName:
        entityTagName: docker.imageName
      integrationName:
        entityTagName: newrelic.integrationName
      integrationVersion:
        entityTagName: newrelic.integrationVersion

goldenTags:
- environment
- container.state

configuration:
  entityExpirationTime: FOUR_HOURS
  alertable: true
